# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

# See what the vm images are and what they have installed:
# https://github.com/actions/virtual-environments/#available-environments

trigger:
  batch: true
  branches:
    include:
    - master
    - releases/*
    - features/*
  paths:
    exclude: [ 'README.md' ]

resources:
  containers:
  - container: node_builder
    image: electrumsvsdk/centos7-bitcoin-builder:latest

jobs:
- job: Linux
  pool: {vmImage: 'ubuntu-latest'}
  variables:
    BSV_BUILD_PATH: '$(Build.BinariesDirectory)/bitcoin-sv-centos7'
  timeoutInMinutes: 120
  steps:
    # Make libevent and other dependencies as needed from bitcoin-sv/depends directory
    # Makes all dependencies for subsequent compilation. Can link to them via:
    # ./configure --prefix=$(BSV_BUILD_PATH)/depends/x86_64-pc-linux-gnu
    - bash: |
        set -e
        git clone --branch v1.0.7 --depth=1 https://github.com/bitcoin-sv/bitcoin-sv.git $(BSV_BUILD_PATH)
        cd $(BSV_BUILD_PATH)
        source /opt/rh/devtoolset-8/enable
        ACLOCAL_PATH=/usr/share/aclocal ./autogen.sh
        cd $(BSV_BUILD_PATH)/depends
        ls -a
        make
        cd ../../

        pushd $(BSV_BUILD_PATH)
        ACLOCAL_PATH=/usr/share/aclocal ./autogen.sh
        ./configure --prefix=$(BSV_BUILD_PATH)/depends/x86_64-pc-linux-gnu --disable-tests --disable-bench --enable-zmq
        make
        popd
      target: node_builder
      displayName: Build Bitcoin SV Node
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.7
    - bash: |
        ls -a $(BSV_BUILD_PATH)/src
        python3 ./contrib/build/linux/transfer_binaries.py
        export "CIBW_BUILD=cp37-manylinux_x86_64 cp38-manylinux_x86_64 cp39-manylinux_x86_64"
        export CIBW_BUILD_VERBOSITY=3
        export CIBW_MANYLINUX_X86_64_IMAGE=manylinux2014
        python3 -m pip install --upgrade pip
        pip3 install cibuildwheel==1.6.4
        cibuildwheel --output-dir wheelhouse .
      target: host
      displayName: Build Manylinux Wheel / Python packaging
    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'Linux'
        pathtoPublish: 'wheelhouse'
    - script: |
        python3 -m pip install pytest pytest-cov wheel --user
        python3 ./contrib/install_built_wheel.py wheelhouse
        cd tests
        python3 -m pytest -v -v -v .
      displayName: Install from wheel and run tests

- job: MacOS
  pool: {vmImage: 'macos-10.15'}
  variables:
    BSV_BUILD_PATH: '$(Build.BinariesDirectory)/bitcoin-sv-macos'
  steps:
    - script: |
        export "CIBW_BUILD=cp37-macosx_x86_64 cp38-macosx_x86_64 cp39-macosx_x86_64"
        export CIBW_BUILD_VERBOSITY=1
        python3 -m pip install --upgrade pip
        pip3 install cibuildwheel==1.6.4
        cibuildwheel --output-dir wheelhouse .
      displayName: Build Bitcoin SV (autotools) / Python packaging
    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'MacOS'
        pathtoPublish: 'wheelhouse'
    - script: |
        python3 -m pip install pytest pytest-cov wheel --user
        python3 ./contrib/install_built_wheel.py wheelhouse
        cd tests
        python3 -m pytest -v -v -v .
      displayName: Install from wheel and run tests

- job: Windows
  pool: {vmImage: 'windows-latest'}
  variables:
    BSV_BUILD_PATH: '$(Build.BinariesDirectory)\bitcoin-sv-windows'
    vcpkgVersion: 2020.06.15
    vcpkgInstallParamPath: '$(Build.SourcesDirectory)\.azure-pipelines\vcpkg'
    vcpkgBinariesPath: 'C:\Users\VssAdministrator\AppData\Local\vcpkg\archives'
    # 32 bit is not supported for the node, see src/config.h "32 bit systems are not supported"
    vcpkg.arch: 'x64' # 'x86'
  timeoutInMinutes: 120
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.7
        architecture: x86
    - task: Cache@2
      displayName: Cache vcpkg
      inputs:
        key: $(vcpkgInstallParamPath)\$(vcpkg.arch)-windows-static.txt | "$(vcpkg.arch)" | "$(vcpkgVersion)" | "$(Agent.OS)"
        path: '$(vcpkgBinariesPath)'
    - script: |
        set "CIBW_BUILD=cp37-win_amd64 cp38-win_amd64 cp39-win_amd64 cp37-win32 cp38-win32 cp39-win32"
        set CIBW_BUILD_VERBOSITY=1
        set CIBW_ENVIRONMENT=vcpkg.arch=$(vcpkg.arch)
        py -3 -m pip install --upgrade pip
        py -3 -m pip install cibuildwheel==1.6.4
        py -3 -m cibuildwheel --output-dir wheelhouse .
      displayName: Build Bitcoin SV (autotools) / Python packaging
    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'Windows'
        pathtoPublish: 'wheelhouse'
    - script: |
        py -3 -m pip install pytest pytest-cov wheel --user
        py -3 ./contrib/install_built_wheel.py wheelhouse
        cd tests
        py -3 -m pytest -v -v -v .
      displayName: Install from wheel and run tests
